// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var ServerFetch$Frontend = require("./ServerFetch.bs.js");
var ServerFetchConfig$Frontend = require("./ServerFetchConfig.bs.js");

function usernameToString(username) {
  return username[0];
}

var baseUrl = ServerFetchConfig$Frontend.config[/* baseUrl */0];

var Fetch = ServerFetch$Frontend.MakeServerFetch(/* module */[/* baseUrl */baseUrl]);

function initialState(param) {
  return /* record */[
          /* users : array */[],
          /* page : UsersPage */0,
          /* todos : array */[]
        ];
}

function reducer(action, state) {
  switch (action.tag | 0) {
    case 0 : 
        return /* Update */Block.__(0, [/* record */[
                    /* users */action[0],
                    /* page */state[/* page */1],
                    /* todos */state[/* todos */2]
                  ]]);
    case 1 : 
        return /* Update */Block.__(0, [/* record */[
                    /* users */state[/* users */0],
                    /* page */action[0],
                    /* todos */state[/* todos */2]
                  ]]);
    case 2 : 
        var userId = action[0];
        return /* UpdateWithSideEffects */Block.__(2, [
                  /* record */[
                    /* users */state[/* users */0],
                    /* page : TodosPage */1,
                    /* todos */state[/* todos */2]
                  ],
                  (function (param) {
                      var send = param[/* send */3];
                      Curry._1(Fetch[/* getUserTodos */2], userId).then((function (todos) {
                              Curry._1(send, /* GotTodos */Block.__(3, [todos]));
                              return Promise.resolve(/* () */0);
                            }));
                      return /* () */0;
                    })
                ]);
    case 3 : 
        return /* Update */Block.__(0, [/* record */[
                    /* users */state[/* users */0],
                    /* page */state[/* page */1],
                    /* todos */action[0]
                  ]]);
    
  }
}

var component = ReasonReact.reducerComponent("UserSelector");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (self) {
              Curry._1(Fetch[/* getUsers */4], /* () */0).then((function (rUsers) {
                      Curry._1(self[/* send */3], /* UpdateUsers */Block.__(0, [rUsers]));
                      return Promise.resolve(/* () */0);
                    }));
              return /* () */0;
            }),
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var send = param[/* send */3];
              var state = param[/* state */1];
              return React.createElement("div", undefined, state[/* page */1] === /* UsersPage */0 ? $$Array.map((function (user) {
                                  return React.createElement("div", {
                                              onClick: (function (param) {
                                                  return Curry._1(send, /* FetchTodos */Block.__(2, [user[/* entityKey */0]]));
                                                })
                                            }, user[/* entityValue */1][/* username */0][0]);
                                }), state[/* users */0]) : (
                            state[/* page */1] === /* TodosPage */1 ? React.createElement("div", undefined, React.createElement("div", undefined, state[/* todos */2].length === 0 ? "No todos" : $$Array.map((function (todo) {
                                                return React.createElement("div", undefined, todo[/* entityValue */1][/* description */0]);
                                              }), state[/* todos */2])), React.createElement("div", undefined, React.createElement("button", {
                                            onClick: (function (param) {
                                                return Curry._1(send, /* UpdatePage */Block.__(1, [/* UsersPage */0]));
                                              })
                                          }, "Back"))) : null
                          ));
            }),
          /* initialState */initialState,
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */reducer,
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.usernameToString = usernameToString;
exports.Fetch = Fetch;
exports.initialState = initialState;
exports.reducer = reducer;
exports.component = component;
exports.make = make;
/* Fetch Not a pure module */
